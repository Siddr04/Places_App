{"ast":null,"code":"var _jsxFileName = \"/home/siddhant/dev/Places_App/Frontend/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer } from \"react\";\nimport \"./Input.css\";\nconst inputReducer = (state, action) => {\n  if (action.type === \"CHANGE\") {\n    return {\n      ...state,\n      //made copy of existing old state\n      value: action.val,\n      isValid: true\n    };\n  } else {\n    return state;\n  }\n};\nconst Input = props => {\n  //use Reducers exactly two things like useState hook\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false\n  }); //we pass in an initial state to the reducer function.\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value\n    });\n  };\n  const element = props.element === \"input\" ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    row: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, props.label), element, !inputState.isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }\n  }, props.err));\n};\nexport default Input;","map":{"version":3,"names":["React","useReducer","inputReducer","state","action","type","value","val","isValid","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","rows","label","err"],"sources":["/home/siddhant/dev/Places_App/Frontend/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer } from \"react\";\n\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  if (action.type === \"CHANGE\") {\n    return {\n      ...state, //made copy of existing old state\n      value: action.val,\n      isValid: true,\n    };\n  } else {\n    return state;\n  }\n};\n\nconst Input = (props) => {\n  //use Reducers exactly two things like useState hook\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n  }); //we pass in an initial state to the reducer function.\n\n  const changeHandler = (event) => {\n    dispatch({ type: \"CHANGE\", val: event.target.value });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        value={inputState.value}\n      ></input>\n    ) : (\n      <textarea\n        id={props.id}\n        row={props.rows || 3}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div className={`form-control ${!inputState.isValid && 'form-control--invalid'}`}>\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && <p>{props.err}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,OAAO,aAAa;AAEpB,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACL,GAAGF,KAAK;MAAE;MACVG,KAAK,EAAEF,MAAM,CAACG,GAAG;MACjBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,MAAM;IACL,OAAOL,KAAK;EACd;AACF,CAAC;AAED,MAAMM,KAAK,GAAIC,KAAK,IAAK;EACvB;EACA,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACC,YAAY,EAAE;IACtDI,KAAK,EAAE,EAAE;IACTE,OAAO,EAAE;EACX,CAAC,CAAC,CAAC,CAAC;;EAEJ,MAAMK,aAAa,GAAIC,KAAK,IAAK;IAC/BF,QAAQ,CAAC;MAAEP,IAAI,EAAE,QAAQ;MAAEE,GAAG,EAAEO,KAAK,CAACC,MAAM,CAACT;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAMU,OAAO,GACXN,KAAK,CAACM,OAAO,KAAK,OAAO,gBACvB;IACE,EAAE,EAAEN,KAAK,CAACO,EAAG;IACb,IAAI,EAAEP,KAAK,CAACL,IAAK;IACjB,WAAW,EAAEK,KAAK,CAACQ,WAAY;IAC/B,QAAQ,EAAEL,aAAc;IACxB,KAAK,EAAEF,UAAU,CAACL,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACjB,gBAET;IACE,EAAE,EAAEI,KAAK,CAACO,EAAG;IACb,GAAG,EAAEP,KAAK,CAACS,IAAI,IAAI,CAAE;IACrB,QAAQ,EAAEN,aAAc;IACxB,KAAK,EAAEF,UAAU,CAACL,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAE3B;EAEH,oBACE;IAAK,SAAS,EAAG,gBAAe,CAACK,UAAU,CAACH,OAAO,IAAI,uBAAwB,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC/E;IAAO,OAAO,EAAEE,KAAK,CAACO,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEP,KAAK,CAACU,KAAK,CAAS,EAC9CJ,OAAO,EACP,CAACL,UAAU,CAACH,OAAO,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIE,KAAK,CAACW,GAAG,CAAK,CACtC;AAEV,CAAC;AAED,eAAeZ,KAAK"},"metadata":{},"sourceType":"module"}